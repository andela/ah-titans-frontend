// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ResetPass /> should render <InlineError /> 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <InlineError
    text=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "",
      "className": "error",
    },
    "ref": null,
    "rendered": "",
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "",
        "className": "error",
      },
      "ref": null,
      "rendered": "",
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`<ResetPass /> should render without crushing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ResetPasswordForm
    data=""
    disabled={true}
    errors={Object {}}
    loading={[Function]}
    onChange={[Function]}
    onSubmit={[Function]}
    onValidate={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <form
        noValidate={true}
        onSubmit={[Function]}
      >
        <Col
          m={4}
          offset="m4"
          s={12}
        >
          <Card
            textClassName="blacktext"
            title="Reset Password"
          >
            <Row>
              <Input
                checked={false}
                id="email"
                label="Email"
                name="email"
                onChange={[Function]}
                onKeyUp={[Function]}
                s={12}
                type="email"
                value=""
              />
            </Row>
            <Row>
              <Col
                m={8}
                s={12}
              >
                <Button
                  disabled={[Function]}
                  node="button"
                  waves="light"
                >
                  Processing ...
                </Button>
              </Col>
              <Col
                m={4}
                s={12}
              >
                <Link
                  replace={false}
                  to="/login"
                >
                  Login instead?
                </Link>
              </Col>
            </Row>
          </Card>
        </Col>
      </form>,
      "style": Object {
        "marginTop": "5%",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Col
          m={4}
          offset="m4"
          s={12}
        >
          <Card
            textClassName="blacktext"
            title="Reset Password"
          >
            <Row>
              <Input
                checked={false}
                id="email"
                label="Email"
                name="email"
                onChange={[Function]}
                onKeyUp={[Function]}
                s={12}
                type="email"
                value=""
              />
            </Row>
            <Row>
              <Col
                m={8}
                s={12}
              >
                <Button
                  disabled={[Function]}
                  node="button"
                  waves="light"
                >
                  Processing ...
                </Button>
              </Col>
              <Col
                m={4}
                s={12}
              >
                <Link
                  replace={false}
                  to="/login"
                >
                  Login instead?
                </Link>
              </Col>
            </Row>
          </Card>
        </Col>,
        "noValidate": true,
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Card
            textClassName="blacktext"
            title="Reset Password"
          >
            <Row>
              <Input
                checked={false}
                id="email"
                label="Email"
                name="email"
                onChange={[Function]}
                onKeyUp={[Function]}
                s={12}
                type="email"
                value=""
              />
            </Row>
            <Row>
              <Col
                m={8}
                s={12}
              >
                <Button
                  disabled={[Function]}
                  node="button"
                  waves="light"
                >
                  Processing ...
                </Button>
              </Col>
              <Col
                m={4}
                s={12}
              >
                <Link
                  replace={false}
                  to="/login"
                >
                  Login instead?
                </Link>
              </Col>
            </Row>
          </Card>,
          "m": 4,
          "offset": "m4",
          "s": 12,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Row>
                <Input
                  checked={false}
                  id="email"
                  label="Email"
                  name="email"
                  onChange={[Function]}
                  onKeyUp={[Function]}
                  s={12}
                  type="email"
                  value=""
                />
              </Row>,
              <Row>
                <Col
                  m={8}
                  s={12}
                >
                  <Button
                    disabled={[Function]}
                    node="button"
                    waves="light"
                  >
                    Processing ...
                  </Button>
                </Col>
                <Col
                  m={4}
                  s={12}
                >
                  <Link
                    replace={false}
                    to="/login"
                  >
                    Login instead?
                  </Link>
                </Col>
              </Row>,
            ],
            "textClassName": "blacktext",
            "title": "Reset Password",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Input
                    checked={false}
                    id="email"
                    label="Email"
                    name="email"
                    onChange={[Function]}
                    onKeyUp={[Function]}
                    s={12}
                    type="email"
                    value=""
                  />,
                  undefined,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checked": false,
                    "id": "email",
                    "label": "Email",
                    "name": "email",
                    "onChange": [Function],
                    "onKeyUp": [Function],
                    "s": 12,
                    "type": "email",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                undefined,
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Col
                    m={8}
                    s={12}
                  >
                    <Button
                      disabled={[Function]}
                      node="button"
                      waves="light"
                    >
                      Processing ...
                    </Button>
                  </Col>,
                  <Col
                    m={4}
                    s={12}
                  >
                    <Link
                      replace={false}
                      to="/login"
                    >
                      Login instead?
                    </Link>
                  </Col>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Button
                      disabled={[Function]}
                      node="button"
                      waves="light"
                    >
                      Processing ...
                    </Button>,
                    "m": 8,
                    "s": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Processing ...",
                      "disabled": [Function],
                      "node": "button",
                      "waves": "light",
                    },
                    "ref": null,
                    "rendered": "Processing ...",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Link
                      replace={false}
                      to="/login"
                    >
                      Login instead?
                    </Link>,
                    "m": 4,
                    "s": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Login instead?",
                      "replace": false,
                      "to": "/login",
                    },
                    "ref": null,
                    "rendered": "Login instead?",
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "form",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <form
          noValidate={true}
          onSubmit={[Function]}
        >
          <Col
            m={4}
            offset="m4"
            s={12}
          >
            <Card
              textClassName="blacktext"
              title="Reset Password"
            >
              <Row>
                <Input
                  checked={false}
                  id="email"
                  label="Email"
                  name="email"
                  onChange={[Function]}
                  onKeyUp={[Function]}
                  s={12}
                  type="email"
                  value=""
                />
              </Row>
              <Row>
                <Col
                  m={8}
                  s={12}
                >
                  <Button
                    disabled={[Function]}
                    node="button"
                    waves="light"
                  >
                    Processing ...
                  </Button>
                </Col>
                <Col
                  m={4}
                  s={12}
                >
                  <Link
                    replace={false}
                    to="/login"
                  >
                    Login instead?
                  </Link>
                </Col>
              </Row>
            </Card>
          </Col>
        </form>,
        "style": Object {
          "marginTop": "5%",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Col
            m={4}
            offset="m4"
            s={12}
          >
            <Card
              textClassName="blacktext"
              title="Reset Password"
            >
              <Row>
                <Input
                  checked={false}
                  id="email"
                  label="Email"
                  name="email"
                  onChange={[Function]}
                  onKeyUp={[Function]}
                  s={12}
                  type="email"
                  value=""
                />
              </Row>
              <Row>
                <Col
                  m={8}
                  s={12}
                >
                  <Button
                    disabled={[Function]}
                    node="button"
                    waves="light"
                  >
                    Processing ...
                  </Button>
                </Col>
                <Col
                  m={4}
                  s={12}
                >
                  <Link
                    replace={false}
                    to="/login"
                  >
                    Login instead?
                  </Link>
                </Col>
              </Row>
            </Card>
          </Col>,
          "noValidate": true,
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Card
              textClassName="blacktext"
              title="Reset Password"
            >
              <Row>
                <Input
                  checked={false}
                  id="email"
                  label="Email"
                  name="email"
                  onChange={[Function]}
                  onKeyUp={[Function]}
                  s={12}
                  type="email"
                  value=""
                />
              </Row>
              <Row>
                <Col
                  m={8}
                  s={12}
                >
                  <Button
                    disabled={[Function]}
                    node="button"
                    waves="light"
                  >
                    Processing ...
                  </Button>
                </Col>
                <Col
                  m={4}
                  s={12}
                >
                  <Link
                    replace={false}
                    to="/login"
                  >
                    Login instead?
                  </Link>
                </Col>
              </Row>
            </Card>,
            "m": 4,
            "offset": "m4",
            "s": 12,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Row>
                  <Input
                    checked={false}
                    id="email"
                    label="Email"
                    name="email"
                    onChange={[Function]}
                    onKeyUp={[Function]}
                    s={12}
                    type="email"
                    value=""
                  />
                </Row>,
                <Row>
                  <Col
                    m={8}
                    s={12}
                  >
                    <Button
                      disabled={[Function]}
                      node="button"
                      waves="light"
                    >
                      Processing ...
                    </Button>
                  </Col>
                  <Col
                    m={4}
                    s={12}
                  >
                    <Link
                      replace={false}
                      to="/login"
                    >
                      Login instead?
                    </Link>
                  </Col>
                </Row>,
              ],
              "textClassName": "blacktext",
              "title": "Reset Password",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Input
                      checked={false}
                      id="email"
                      label="Email"
                      name="email"
                      onChange={[Function]}
                      onKeyUp={[Function]}
                      s={12}
                      type="email"
                      value=""
                    />,
                    undefined,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": false,
                      "id": "email",
                      "label": "Email",
                      "name": "email",
                      "onChange": [Function],
                      "onKeyUp": [Function],
                      "s": 12,
                      "type": "email",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  undefined,
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Col
                      m={8}
                      s={12}
                    >
                      <Button
                        disabled={[Function]}
                        node="button"
                        waves="light"
                      >
                        Processing ...
                      </Button>
                    </Col>,
                    <Col
                      m={4}
                      s={12}
                    >
                      <Link
                        replace={false}
                        to="/login"
                      >
                        Login instead?
                      </Link>
                    </Col>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Button
                        disabled={[Function]}
                        node="button"
                        waves="light"
                      >
                        Processing ...
                      </Button>,
                      "m": 8,
                      "s": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Processing ...",
                        "disabled": [Function],
                        "node": "button",
                        "waves": "light",
                      },
                      "ref": null,
                      "rendered": "Processing ...",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Link
                        replace={false}
                        to="/login"
                      >
                        Login instead?
                      </Link>,
                      "m": 4,
                      "s": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Login instead?",
                        "replace": false,
                        "to": "/login",
                      },
                      "ref": null,
                      "rendered": "Login instead?",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": "form",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
